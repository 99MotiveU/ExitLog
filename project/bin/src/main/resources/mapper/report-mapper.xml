<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exitlog.admin.mapper.ReportMapper">

    <resultMap id="basicLogResultMap" type="LogPostDetailDto">
        <id property="logNo" column="LOG_NO"/>
        <result property="userNo" column="USER_NO_FROM_LOG"/>
        <result property="nickname" column="AUTHOR_NICKNAME"/>
        <result property="title" column="TITLE"/>
        <result property="companyName" column="COMPANY_NAME"/>
        <result property="repoCount" column="REPO_COUNT"/>
        <result property="createdDate" column="CREATED_DATE"/>
    </resultMap>
    
    <resultMap id="reportItemDtoResultMap" type="ReportItemDto">
        <id property="repoNo" column="R_REPO_NO"/>
        <result property="logNo" column="R_LOG_NO"/>
        <result property="reporterUserNo" column="R_USER_NO"/>
        <result property="reporterNickname" column="U_NICKNAME"/>
        <result property="repoReason" column="R_REPO_REASON"/>
        <result property="repoDate" column="R_REPO_DATE"/>
        <result property="processed" column="R_IS_DEL"/>
	</resultMap>

	<!-- 신고 요청 목록 조회(페이징 X) -->
    <select id="selectBasicReportedLogs" resultMap="basicLogResultMap">
        SELECT
            l.LOG_NO,
            l.TITLE,
            l.COMPANY_NAME,    /* 게시글에 입력한 회사명 */
            l.USER_NO   AS USER_NO_FROM_LOG, /* Log 테이블의 작성자 USER_NO */
            u.NICKNAME  AS AUTHOR_NICKNAME,  /* User 테이블의 작성자 NICKNAME */
            l.REPO_COUNT,
            l.CREATED_DATE
        FROM
            log l
        JOIN
            user u ON l.USER_NO = u.USER_NO  /* 작성자 정보를 위해 user 테이블 JOIN */
        WHERE
            l.REPO_COUNT >= 5 AND l.IS_DEL = 0
        ORDER BY
            l.CREATED_DATE DESC
    </select>
    
    <!-- 신고 요청 개수 조회(+페이징) -->
    <select id="selectPagedReportedLogs" resultMap="basicLogResultMap">
        SELECT
            l.LOG_NO,
            l.TITLE,
            l.COMPANY_NAME,
            l.USER_NO   AS USER_NO_FROM_LOG,
            u.NICKNAME  AS AUTHOR_NICKNAME,
            l.REPO_COUNT,
            l.CREATED_DATE
        FROM
            log l
        JOIN
            user u ON l.USER_NO = u.USER_NO
        WHERE
            l.REPO_COUNT >= 5 AND l.IS_DEL = 0
        ORDER BY
            l.CREATED_DATE DESC
        LIMIT #{limit} OFFSET #{offset}
     </select>
     
     <!-- 신고 요청 개수 조회(for 페이징) -->
     <select id="countReportedLogs" resultType="int">
        SELECT
            COUNT(l.LOG_NO)
        FROM
            log l
        JOIN
            user u ON l.USER_NO = u.USER_NO
        WHERE
            l.REPO_COUNT >= 5 AND l.IS_DEL = 0
     </select>
     
     <!-- 게시글 신고하기 -->
     <insert id="insertReport" parameterType="Report" useGeneratedKeys="true" keyProperty="repoNo">
        INSERT INTO 
        	report (LOG_NO, USER_NO, REPO_REASON, REPO_DATE, IS_DEL) 
      	VALUES (#{logNo}, #{userNo}, #{repoReason}, NOW(), 0) 
     </insert>

	<!-- 신고수 증가 -->
    <update id="incrementLogReportCount" parameterType="int">
        UPDATE log
        SET REPO_COUNT = REPO_COUNT + 1
        WHERE LOG_NO = #{logNo}
    </update>
    
    <!-- 게시글 신고 사유 조회 -->
    <select id="findReportItemsByLogNo" parameterType="int" resultMap="reportItemDtoResultMap">
        SELECT
            r.REPO_NO       AS R_REPO_NO,
            r.LOG_NO        AS R_LOG_NO,
            r.USER_NO       AS R_USER_NO,    /* 신고자 USER_NO */
            u.NICKNAME      AS U_NICKNAME,   /* user 테이블에서 신고자 NICKNAME */
            r.REPO_REASON   AS R_REPO_REASON,
            r.REPO_DATE     AS R_REPO_DATE,
            r.IS_DEL        AS R_IS_DEL      /* 신고 처리 여부 (0: 미처리, 1: 처리됨/숨김) */
        FROM
            report r
        JOIN
            user u ON r.USER_NO = u.USER_NO
        WHERE
            r.LOG_NO = #{logNo}
        ORDER BY
            r.REPO_DATE DESC /* 최근 신고 순으로 정렬 */
    </select>
    
    <!-- 신고된 게시글 삭제 처리 -->
    <update id="markLogAsDeleted" parameterType="int">
        UPDATE log
        SET 
            IS_DEL = 1
        WHERE 
            LOG_NO = #{logNo}
    </update>
    
    <!-- 신고된 게시글 보류 처리 -->
    <update id="resetLogReportCount" parameterType="int">
        UPDATE log
        SET 
            REPO_COUNT = 0
        WHERE 
            LOG_NO = #{logNo}
    </update>

</mapper>